
TEST_BEGIN_64(PADDBr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	paddb mm0, mm1
TEST_END_64

TEST_BEGIN_64(PADDBr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    paddb mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PADDWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	paddw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PADDWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    paddw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PADDDr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	paddd mm0, mm1
TEST_END_64

TEST_BEGIN_64(PADDDr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    paddd mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PADDQr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	paddq mm0, mm1
TEST_END_64

TEST_BEGIN_64(PADDQr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    paddq mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PADDSBr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	paddsb mm0, mm1
TEST_END_64

TEST_BEGIN_64(PADDSBr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    paddsb mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PADDSWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	paddsw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PADDSWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    paddsw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PHADDWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	phaddw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PHADDWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    phaddw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PHADDDr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	phaddd mm0, mm1
TEST_END_64

TEST_BEGIN_64(PHADDDr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    phaddd mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PHADDSWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	phaddsw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PHADDSWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    phaddsw mm0, qword ptr [rsp]
TEST_END_64