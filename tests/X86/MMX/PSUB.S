
TEST_BEGIN_64(PSUBBr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	psubb mm0, mm1
TEST_END_64

TEST_BEGIN_64(PSUBBr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    psubb mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PSUBWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	psubw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PSUBWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    psubw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PSUBDr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	psubd mm0, mm1
TEST_END_64

TEST_BEGIN_64(PSUBDr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    psubb mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PSUBUSBr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	psubusb mm0, mm1
TEST_END_64

TEST_BEGIN_64(PSUBUSBr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    psubusb mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PSUBUSWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	psubusw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PSUBUSWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    psubusw mm0, qword ptr [rsp]
TEST_END_64


TEST_BEGIN_64(PHSUBWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	phsubw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PHSUBWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    phsubw mm0, qword ptr [rsp]
TEST_END_64


TEST_BEGIN_64(PHSUBDr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	phsubd mm0, mm1
TEST_END_64

TEST_BEGIN_64(PHSUBDr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    phsubd mm0, qword ptr [rsp]
TEST_END_64

/*
TEST_BEGIN_64(PHSUBSWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	phsubsw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PHSUBSWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x3f, 0x3f,
	0x3f, 0x40,
	0x40, 0x3f,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x3fff, 0x3fff,
	0x3fff, 0x4000,
	0x4000, 0x3fff,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3fffffff, 0x3fffffff,
	0x3fffffff, 0x40000000,
	0x40000000, 0x3fffffff,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    phsubsw mm0, qword ptr [rsp]
TEST_END_64
*/
