
TEST_BEGIN_64(PAVGBr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	pavgb mm0, mm1
TEST_END_64

TEST_BEGIN_64(PAVGBr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pavgb mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PAVGWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
	pavgw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PAVGWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
	0, 1,
	0x80, 0x7F,
	0x7F, 0x80,
	0x80, 0x80,
	0x7FFF, 0x8000,
	0x8000, 0x7FFF,
	0x8000, 0x8000,
	0x3FFFFFFF, 0x3FFFFFFF,
	0x7FFFFFFF, 0x7FFFFFFF,
	0x80000000, 0x7FFFFFFF,
	0x7FFFFFFF, 0x80000000,
	0x80000000, 0x80000000,
	0x3ff0000000000000, 0x3ff0000000000000,
	0x3ff0000000000000, 0x4000000000000000,
	0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pavgw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PABSBr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    pabsb mm0, mm1
TEST_END_64

TEST_BEGIN_64(PABSBr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pabsb mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PABSWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    pabsw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PABSWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pabsw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PAVGDr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    pabsd mm0, mm1
TEST_END_64

TEST_BEGIN_64(PAVGDr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pabsd mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PMULHRSWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    pmulhrsw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PMULHRSWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pmulhrsw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PMAXSWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    pmaxsw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PMAXSWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pmaxsw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PMAXUBr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    pmaxub mm0, mm1
TEST_END_64

TEST_BEGIN_64(PMAXUBr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pmaxub mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PMINSWr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    pminsw mm0, mm1
TEST_END_64

TEST_BEGIN_64(PMINSWr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pminsw mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PMINUBr64r64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    pminub mm0, mm1
TEST_END_64

TEST_BEGIN_64(PMINUBr64m64, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    pminub mm0, qword ptr [rsp]
TEST_END_64

TEST_BEGIN_64(PALIGNR_64r64r64i8, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    movq mm0, ARG1_64
    movq mm1, ARG2_64
    palignr mm0, mm1, 1
TEST_END_64

TEST_BEGIN_64(PALIGNR_64r64m64i8, 2)
TEST_INPUTS(
    0, 0,
    1, 0,
    0, 1,
    0x80, 0x7F,
    0x7F, 0x80,
    0x80, 0x80,
    0x7FFF, 0x8000,
    0x8000, 0x7FFF,
    0x8000, 0x8000,
    0x3FFFFFFF, 0x3FFFFFFF,
    0x7FFFFFFF, 0x7FFFFFFF,
    0x80000000, 0x7FFFFFFF,
    0x7FFFFFFF, 0x80000000,
    0x80000000, 0x80000000,
    0x3ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0x4000000000000000,
    0x4000000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x8000000000000000,
    0x8000000000000000, 0x7ff0000000000000,
    0x3ff0000000000000, 0x7ff0000000000000,
    0x7ff0000000000000, 0x3ff0000000000000,
    0x3ff0000000000000, 0xfff0000000000000,
    0xfff0000000000000, 0x3ff0000000000000,
    0x7ff0000000000000, 0x7ff0000000000000,
    0xfff0000000000000, 0xfff0000000000000,
    0x7ff8000000000000, 0x7ff8000000000000,
    0x7ff0000000000000, 0x7ff8000000000000,
    0x7ff8000000000000, 0x7ff0000000000000)
TEST_IGNORE_FLAGS()
TEST_USE_X87_MMX
    push ARG2_64
    movq mm0, ARG1_64
    palignr mm0, qword ptr [rsp], 1
TEST_END_64