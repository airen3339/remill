// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CFG.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CFG.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace remill {
namespace cfg {

namespace {

const ::google::protobuf::Descriptor* Instr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Instr_reflection_ = NULL;
const ::google::protobuf::Descriptor* Block_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Block_reflection_ = NULL;
const ::google::protobuf::Descriptor* NamedBlock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NamedBlock_reflection_ = NULL;
const ::google::protobuf::Descriptor* Module_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Module_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Visibility_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_CFG_2eproto() {
  protobuf_AddDesc_CFG_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CFG.proto");
  GOOGLE_CHECK(file != NULL);
  Instr_descriptor_ = file->message_type(0);
  static const int Instr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instr, bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instr, address_),
  };
  Instr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Instr_descriptor_,
      Instr::default_instance_,
      Instr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Instr));
  Block_descriptor_ = file->message_type(1);
  static const int Block_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, is_addressable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, instructions_),
  };
  Block_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Block_descriptor_,
      Block::default_instance_,
      Block_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Block));
  NamedBlock_descriptor_ = file->message_type(2);
  static const int NamedBlock_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NamedBlock, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NamedBlock, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NamedBlock, visibility_),
  };
  NamedBlock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NamedBlock_descriptor_,
      NamedBlock::default_instance_,
      NamedBlock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NamedBlock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NamedBlock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NamedBlock));
  Module_descriptor_ = file->message_type(3);
  static const int Module_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, named_blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, referenced_blocks_),
  };
  Module_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Module_descriptor_,
      Module::default_instance_,
      Module_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Module));
  Visibility_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CFG_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Instr_descriptor_, &Instr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Block_descriptor_, &Block::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NamedBlock_descriptor_, &NamedBlock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Module_descriptor_, &Module::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CFG_2eproto() {
  delete Instr::default_instance_;
  delete Instr_reflection_;
  delete Block::default_instance_;
  delete Block_reflection_;
  delete NamedBlock::default_instance_;
  delete NamedBlock_reflection_;
  delete Module::default_instance_;
  delete Module_reflection_;
}

void protobuf_AddDesc_CFG_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tCFG.proto\022\nremill.cfg\"\'\n\005Instr\022\r\n\005byte"
    "s\030\001 \002(\014\022\017\n\007address\030\002 \002(\004\"Y\n\005Block\022\017\n\007add"
    "ress\030\001 \002(\004\022\026\n\016is_addressable\030\002 \002(\010\022\'\n\014in"
    "structions\030\003 \003(\0132\021.remill.cfg.Instr\"W\n\nN"
    "amedBlock\022\014\n\004name\030\001 \002(\t\022\017\n\007address\030\002 \002(\004"
    "\022*\n\nvisibility\030\003 \002(\0162\026.remill.cfg.Visibi"
    "lity\"t\n\006Module\022!\n\006blocks\030\001 \003(\0132\021.remill."
    "cfg.Block\022,\n\014named_blocks\030\002 \003(\0132\026.remill"
    ".cfg.NamedBlock\022\031\n\021referenced_blocks\030\003 \003"
    "(\004*(\n\nVisibility\022\014\n\010EXPORTED\020\000\022\014\n\010IMPORT"
    "ED\020\001", 404);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CFG.proto", &protobuf_RegisterTypes);
  Instr::default_instance_ = new Instr();
  Block::default_instance_ = new Block();
  NamedBlock::default_instance_ = new NamedBlock();
  Module::default_instance_ = new Module();
  Instr::default_instance_->InitAsDefaultInstance();
  Block::default_instance_->InitAsDefaultInstance();
  NamedBlock::default_instance_->InitAsDefaultInstance();
  Module::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CFG_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CFG_2eproto {
  StaticDescriptorInitializer_CFG_2eproto() {
    protobuf_AddDesc_CFG_2eproto();
  }
} static_descriptor_initializer_CFG_2eproto_;
const ::google::protobuf::EnumDescriptor* Visibility_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Visibility_descriptor_;
}
bool Visibility_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Instr::kBytesFieldNumber;
const int Instr::kAddressFieldNumber;
#endif  // !_MSC_VER

Instr::Instr()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:remill.cfg.Instr)
}

void Instr::InitAsDefaultInstance() {
}

Instr::Instr(const Instr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:remill.cfg.Instr)
}

void Instr::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Instr::~Instr() {
  // @@protoc_insertion_point(destructor:remill.cfg.Instr)
  SharedDtor();
}

void Instr::SharedDtor() {
  if (bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bytes_;
  }
  if (this != default_instance_) {
  }
}

void Instr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Instr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Instr_descriptor_;
}

const Instr& Instr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CFG_2eproto();
  return *default_instance_;
}

Instr* Instr::default_instance_ = NULL;

Instr* Instr::New() const {
  return new Instr;
}

void Instr::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_bytes()) {
      if (bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bytes_->clear();
      }
    }
    address_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Instr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:remill.cfg.Instr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes bytes = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_address;
        break;
      }

      // required uint64 address = 2;
      case 2: {
        if (tag == 16) {
         parse_address:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_)));
          set_has_address();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:remill.cfg.Instr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:remill.cfg.Instr)
  return false;
#undef DO_
}

void Instr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:remill.cfg.Instr)
  // required bytes bytes = 1;
  if (has_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bytes(), output);
  }

  // required uint64 address = 2;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->address(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:remill.cfg.Instr)
}

::google::protobuf::uint8* Instr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:remill.cfg.Instr)
  // required bytes bytes = 1;
  if (has_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bytes(), target);
  }

  // required uint64 address = 2;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->address(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remill.cfg.Instr)
  return target;
}

int Instr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes bytes = 1;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes());
    }

    // required uint64 address = 2;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->address());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Instr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Instr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Instr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Instr::MergeFrom(const Instr& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bytes()) {
      set_bytes(from.bytes());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Instr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instr::CopyFrom(const Instr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Instr::Swap(Instr* other) {
  if (other != this) {
    std::swap(bytes_, other->bytes_);
    std::swap(address_, other->address_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Instr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Instr_descriptor_;
  metadata.reflection = Instr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Block::kAddressFieldNumber;
const int Block::kIsAddressableFieldNumber;
const int Block::kInstructionsFieldNumber;
#endif  // !_MSC_VER

Block::Block()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:remill.cfg.Block)
}

void Block::InitAsDefaultInstance() {
}

Block::Block(const Block& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:remill.cfg.Block)
}

void Block::SharedCtor() {
  _cached_size_ = 0;
  address_ = GOOGLE_ULONGLONG(0);
  is_addressable_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:remill.cfg.Block)
  SharedDtor();
}

void Block::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Block_descriptor_;
}

const Block& Block::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CFG_2eproto();
  return *default_instance_;
}

Block* Block::default_instance_ = NULL;

Block* Block::New() const {
  return new Block;
}

void Block::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    address_ = GOOGLE_ULONGLONG(0);
    is_addressable_ = false;
  }
  instructions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:remill.cfg.Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 address = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_)));
          set_has_address();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_is_addressable;
        break;
      }

      // required bool is_addressable = 2;
      case 2: {
        if (tag == 16) {
         parse_is_addressable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_addressable_)));
          set_has_is_addressable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_instructions;
        break;
      }

      // repeated .remill.cfg.Instr instructions = 3;
      case 3: {
        if (tag == 26) {
         parse_instructions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instructions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_instructions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:remill.cfg.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:remill.cfg.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:remill.cfg.Block)
  // required uint64 address = 1;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->address(), output);
  }

  // required bool is_addressable = 2;
  if (has_is_addressable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_addressable(), output);
  }

  // repeated .remill.cfg.Instr instructions = 3;
  for (int i = 0; i < this->instructions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->instructions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:remill.cfg.Block)
}

::google::protobuf::uint8* Block::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:remill.cfg.Block)
  // required uint64 address = 1;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->address(), target);
  }

  // required bool is_addressable = 2;
  if (has_is_addressable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_addressable(), target);
  }

  // repeated .remill.cfg.Instr instructions = 3;
  for (int i = 0; i < this->instructions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->instructions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remill.cfg.Block)
  return target;
}

int Block::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 address = 1;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->address());
    }

    // required bool is_addressable = 2;
    if (has_is_addressable()) {
      total_size += 1 + 1;
    }

  }
  // repeated .remill.cfg.Instr instructions = 3;
  total_size += 1 * this->instructions_size();
  for (int i = 0; i < this->instructions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->instructions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Block* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Block*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
  GOOGLE_CHECK_NE(&from, this);
  instructions_.MergeFrom(from.instructions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_is_addressable()) {
      set_is_addressable(from.is_addressable());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->instructions())) return false;
  return true;
}

void Block::Swap(Block* other) {
  if (other != this) {
    std::swap(address_, other->address_);
    std::swap(is_addressable_, other->is_addressable_);
    instructions_.Swap(&other->instructions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Block_descriptor_;
  metadata.reflection = Block_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NamedBlock::kNameFieldNumber;
const int NamedBlock::kAddressFieldNumber;
const int NamedBlock::kVisibilityFieldNumber;
#endif  // !_MSC_VER

NamedBlock::NamedBlock()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:remill.cfg.NamedBlock)
}

void NamedBlock::InitAsDefaultInstance() {
}

NamedBlock::NamedBlock(const NamedBlock& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:remill.cfg.NamedBlock)
}

void NamedBlock::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = GOOGLE_ULONGLONG(0);
  visibility_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NamedBlock::~NamedBlock() {
  // @@protoc_insertion_point(destructor:remill.cfg.NamedBlock)
  SharedDtor();
}

void NamedBlock::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void NamedBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NamedBlock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NamedBlock_descriptor_;
}

const NamedBlock& NamedBlock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CFG_2eproto();
  return *default_instance_;
}

NamedBlock* NamedBlock::default_instance_ = NULL;

NamedBlock* NamedBlock::New() const {
  return new NamedBlock;
}

void NamedBlock::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NamedBlock*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(address_, visibility_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NamedBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:remill.cfg.NamedBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_address;
        break;
      }

      // required uint64 address = 2;
      case 2: {
        if (tag == 16) {
         parse_address:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_)));
          set_has_address();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_visibility;
        break;
      }

      // required .remill.cfg.Visibility visibility = 3;
      case 3: {
        if (tag == 24) {
         parse_visibility:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::remill::cfg::Visibility_IsValid(value)) {
            set_visibility(static_cast< ::remill::cfg::Visibility >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:remill.cfg.NamedBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:remill.cfg.NamedBlock)
  return false;
#undef DO_
}

void NamedBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:remill.cfg.NamedBlock)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint64 address = 2;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->address(), output);
  }

  // required .remill.cfg.Visibility visibility = 3;
  if (has_visibility()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->visibility(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:remill.cfg.NamedBlock)
}

::google::protobuf::uint8* NamedBlock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:remill.cfg.NamedBlock)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint64 address = 2;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->address(), target);
  }

  // required .remill.cfg.Visibility visibility = 3;
  if (has_visibility()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->visibility(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remill.cfg.NamedBlock)
  return target;
}

int NamedBlock::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required uint64 address = 2;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->address());
    }

    // required .remill.cfg.Visibility visibility = 3;
    if (has_visibility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->visibility());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NamedBlock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NamedBlock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NamedBlock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NamedBlock::MergeFrom(const NamedBlock& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_visibility()) {
      set_visibility(from.visibility());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NamedBlock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NamedBlock::CopyFrom(const NamedBlock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamedBlock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void NamedBlock::Swap(NamedBlock* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(address_, other->address_);
    std::swap(visibility_, other->visibility_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NamedBlock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NamedBlock_descriptor_;
  metadata.reflection = NamedBlock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Module::kBlocksFieldNumber;
const int Module::kNamedBlocksFieldNumber;
const int Module::kReferencedBlocksFieldNumber;
#endif  // !_MSC_VER

Module::Module()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:remill.cfg.Module)
}

void Module::InitAsDefaultInstance() {
}

Module::Module(const Module& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:remill.cfg.Module)
}

void Module::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:remill.cfg.Module)
  SharedDtor();
}

void Module::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Module::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Module_descriptor_;
}

const Module& Module::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CFG_2eproto();
  return *default_instance_;
}

Module* Module::default_instance_ = NULL;

Module* Module::New() const {
  return new Module;
}

void Module::Clear() {
  blocks_.Clear();
  named_blocks_.Clear();
  referenced_blocks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:remill.cfg.Module)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .remill.cfg.Block blocks = 1;
      case 1: {
        if (tag == 10) {
         parse_blocks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_blocks;
        if (input->ExpectTag(18)) goto parse_named_blocks;
        break;
      }

      // repeated .remill.cfg.NamedBlock named_blocks = 2;
      case 2: {
        if (tag == 18) {
         parse_named_blocks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_named_blocks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_named_blocks;
        if (input->ExpectTag(24)) goto parse_referenced_blocks;
        break;
      }

      // repeated uint64 referenced_blocks = 3;
      case 3: {
        if (tag == 24) {
         parse_referenced_blocks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_referenced_blocks())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_referenced_blocks())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_referenced_blocks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:remill.cfg.Module)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:remill.cfg.Module)
  return false;
#undef DO_
}

void Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:remill.cfg.Module)
  // repeated .remill.cfg.Block blocks = 1;
  for (int i = 0; i < this->blocks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->blocks(i), output);
  }

  // repeated .remill.cfg.NamedBlock named_blocks = 2;
  for (int i = 0; i < this->named_blocks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->named_blocks(i), output);
  }

  // repeated uint64 referenced_blocks = 3;
  for (int i = 0; i < this->referenced_blocks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->referenced_blocks(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:remill.cfg.Module)
}

::google::protobuf::uint8* Module::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:remill.cfg.Module)
  // repeated .remill.cfg.Block blocks = 1;
  for (int i = 0; i < this->blocks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->blocks(i), target);
  }

  // repeated .remill.cfg.NamedBlock named_blocks = 2;
  for (int i = 0; i < this->named_blocks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->named_blocks(i), target);
  }

  // repeated uint64 referenced_blocks = 3;
  for (int i = 0; i < this->referenced_blocks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->referenced_blocks(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remill.cfg.Module)
  return target;
}

int Module::ByteSize() const {
  int total_size = 0;

  // repeated .remill.cfg.Block blocks = 1;
  total_size += 1 * this->blocks_size();
  for (int i = 0; i < this->blocks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blocks(i));
  }

  // repeated .remill.cfg.NamedBlock named_blocks = 2;
  total_size += 1 * this->named_blocks_size();
  for (int i = 0; i < this->named_blocks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->named_blocks(i));
  }

  // repeated uint64 referenced_blocks = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->referenced_blocks_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->referenced_blocks(i));
    }
    total_size += 1 * this->referenced_blocks_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Module::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Module* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Module*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Module::MergeFrom(const Module& from) {
  GOOGLE_CHECK_NE(&from, this);
  blocks_.MergeFrom(from.blocks_);
  named_blocks_.MergeFrom(from.named_blocks_);
  referenced_blocks_.MergeFrom(from.referenced_blocks_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Module::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Module::CopyFrom(const Module& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->blocks())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->named_blocks())) return false;
  return true;
}

void Module::Swap(Module* other) {
  if (other != this) {
    blocks_.Swap(&other->blocks_);
    named_blocks_.Swap(&other->named_blocks_);
    referenced_blocks_.Swap(&other->referenced_blocks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Module::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Module_descriptor_;
  metadata.reflection = Module_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cfg
}  // namespace remill

// @@protoc_insertion_point(global_scope)
