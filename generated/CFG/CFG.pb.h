// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CFG.proto

#ifndef PROTOBUF_CFG_2eproto__INCLUDED
#define PROTOBUF_CFG_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace remill {
namespace cfg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CFG_2eproto();
void protobuf_AssignDesc_CFG_2eproto();
void protobuf_ShutdownFile_CFG_2eproto();

class Instr;
class Block;
class NamedBlock;
class Module;

enum Visibility {
  EXPORTED = 0,
  IMPORTED = 1
};
bool Visibility_IsValid(int value);
const Visibility Visibility_MIN = EXPORTED;
const Visibility Visibility_MAX = IMPORTED;
const int Visibility_ARRAYSIZE = Visibility_MAX + 1;

const ::google::protobuf::EnumDescriptor* Visibility_descriptor();
inline const ::std::string& Visibility_Name(Visibility value) {
  return ::google::protobuf::internal::NameOfEnum(
    Visibility_descriptor(), value);
}
inline bool Visibility_Parse(
    const ::std::string& name, Visibility* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Visibility>(
    Visibility_descriptor(), name, value);
}
// ===================================================================

class Instr : public ::google::protobuf::Message {
 public:
  Instr();
  virtual ~Instr();

  Instr(const Instr& from);

  inline Instr& operator=(const Instr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Instr& default_instance();

  void Swap(Instr* other);

  // implements Message ----------------------------------------------

  Instr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Instr& from);
  void MergeFrom(const Instr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes bytes = 1;
  inline bool has_bytes() const;
  inline void clear_bytes();
  static const int kBytesFieldNumber = 1;
  inline const ::std::string& bytes() const;
  inline void set_bytes(const ::std::string& value);
  inline void set_bytes(const char* value);
  inline void set_bytes(const void* value, size_t size);
  inline ::std::string* mutable_bytes();
  inline ::std::string* release_bytes();
  inline void set_allocated_bytes(::std::string* bytes);

  // required uint64 address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline ::google::protobuf::uint64 address() const;
  inline void set_address(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:remill.cfg.Instr)
 private:
  inline void set_has_bytes();
  inline void clear_has_bytes();
  inline void set_has_address();
  inline void clear_has_address();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* bytes_;
  ::google::protobuf::uint64 address_;
  friend void  protobuf_AddDesc_CFG_2eproto();
  friend void protobuf_AssignDesc_CFG_2eproto();
  friend void protobuf_ShutdownFile_CFG_2eproto();

  void InitAsDefaultInstance();
  static Instr* default_instance_;
};
// -------------------------------------------------------------------

class Block : public ::google::protobuf::Message {
 public:
  Block();
  virtual ~Block();

  Block(const Block& from);

  inline Block& operator=(const Block& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Block& default_instance();

  void Swap(Block* other);

  // implements Message ----------------------------------------------

  Block* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Block& from);
  void MergeFrom(const Block& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline ::google::protobuf::uint64 address() const;
  inline void set_address(::google::protobuf::uint64 value);

  // required bool is_addressable = 2;
  inline bool has_is_addressable() const;
  inline void clear_is_addressable();
  static const int kIsAddressableFieldNumber = 2;
  inline bool is_addressable() const;
  inline void set_is_addressable(bool value);

  // repeated .remill.cfg.Instr instructions = 3;
  inline int instructions_size() const;
  inline void clear_instructions();
  static const int kInstructionsFieldNumber = 3;
  inline const ::remill::cfg::Instr& instructions(int index) const;
  inline ::remill::cfg::Instr* mutable_instructions(int index);
  inline ::remill::cfg::Instr* add_instructions();
  inline const ::google::protobuf::RepeatedPtrField< ::remill::cfg::Instr >&
      instructions() const;
  inline ::google::protobuf::RepeatedPtrField< ::remill::cfg::Instr >*
      mutable_instructions();

  // @@protoc_insertion_point(class_scope:remill.cfg.Block)
 private:
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_is_addressable();
  inline void clear_has_is_addressable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 address_;
  ::google::protobuf::RepeatedPtrField< ::remill::cfg::Instr > instructions_;
  bool is_addressable_;
  friend void  protobuf_AddDesc_CFG_2eproto();
  friend void protobuf_AssignDesc_CFG_2eproto();
  friend void protobuf_ShutdownFile_CFG_2eproto();

  void InitAsDefaultInstance();
  static Block* default_instance_;
};
// -------------------------------------------------------------------

class NamedBlock : public ::google::protobuf::Message {
 public:
  NamedBlock();
  virtual ~NamedBlock();

  NamedBlock(const NamedBlock& from);

  inline NamedBlock& operator=(const NamedBlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NamedBlock& default_instance();

  void Swap(NamedBlock* other);

  // implements Message ----------------------------------------------

  NamedBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NamedBlock& from);
  void MergeFrom(const NamedBlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint64 address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline ::google::protobuf::uint64 address() const;
  inline void set_address(::google::protobuf::uint64 value);

  // required .remill.cfg.Visibility visibility = 3;
  inline bool has_visibility() const;
  inline void clear_visibility();
  static const int kVisibilityFieldNumber = 3;
  inline ::remill::cfg::Visibility visibility() const;
  inline void set_visibility(::remill::cfg::Visibility value);

  // @@protoc_insertion_point(class_scope:remill.cfg.NamedBlock)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_visibility();
  inline void clear_has_visibility();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint64 address_;
  int visibility_;
  friend void  protobuf_AddDesc_CFG_2eproto();
  friend void protobuf_AssignDesc_CFG_2eproto();
  friend void protobuf_ShutdownFile_CFG_2eproto();

  void InitAsDefaultInstance();
  static NamedBlock* default_instance_;
};
// -------------------------------------------------------------------

class Module : public ::google::protobuf::Message {
 public:
  Module();
  virtual ~Module();

  Module(const Module& from);

  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Module& default_instance();

  void Swap(Module* other);

  // implements Message ----------------------------------------------

  Module* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Module& from);
  void MergeFrom(const Module& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .remill.cfg.Block blocks = 1;
  inline int blocks_size() const;
  inline void clear_blocks();
  static const int kBlocksFieldNumber = 1;
  inline const ::remill::cfg::Block& blocks(int index) const;
  inline ::remill::cfg::Block* mutable_blocks(int index);
  inline ::remill::cfg::Block* add_blocks();
  inline const ::google::protobuf::RepeatedPtrField< ::remill::cfg::Block >&
      blocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::remill::cfg::Block >*
      mutable_blocks();

  // repeated .remill.cfg.NamedBlock named_blocks = 2;
  inline int named_blocks_size() const;
  inline void clear_named_blocks();
  static const int kNamedBlocksFieldNumber = 2;
  inline const ::remill::cfg::NamedBlock& named_blocks(int index) const;
  inline ::remill::cfg::NamedBlock* mutable_named_blocks(int index);
  inline ::remill::cfg::NamedBlock* add_named_blocks();
  inline const ::google::protobuf::RepeatedPtrField< ::remill::cfg::NamedBlock >&
      named_blocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::remill::cfg::NamedBlock >*
      mutable_named_blocks();

  // repeated uint64 referenced_blocks = 3;
  inline int referenced_blocks_size() const;
  inline void clear_referenced_blocks();
  static const int kReferencedBlocksFieldNumber = 3;
  inline ::google::protobuf::uint64 referenced_blocks(int index) const;
  inline void set_referenced_blocks(int index, ::google::protobuf::uint64 value);
  inline void add_referenced_blocks(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      referenced_blocks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_referenced_blocks();

  // @@protoc_insertion_point(class_scope:remill.cfg.Module)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::remill::cfg::Block > blocks_;
  ::google::protobuf::RepeatedPtrField< ::remill::cfg::NamedBlock > named_blocks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > referenced_blocks_;
  friend void  protobuf_AddDesc_CFG_2eproto();
  friend void protobuf_AssignDesc_CFG_2eproto();
  friend void protobuf_ShutdownFile_CFG_2eproto();

  void InitAsDefaultInstance();
  static Module* default_instance_;
};
// ===================================================================


// ===================================================================

// Instr

// required bytes bytes = 1;
inline bool Instr::has_bytes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Instr::set_has_bytes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Instr::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Instr::clear_bytes() {
  if (bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytes_->clear();
  }
  clear_has_bytes();
}
inline const ::std::string& Instr::bytes() const {
  // @@protoc_insertion_point(field_get:remill.cfg.Instr.bytes)
  return *bytes_;
}
inline void Instr::set_bytes(const ::std::string& value) {
  set_has_bytes();
  if (bytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(value);
  // @@protoc_insertion_point(field_set:remill.cfg.Instr.bytes)
}
inline void Instr::set_bytes(const char* value) {
  set_has_bytes();
  if (bytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(value);
  // @@protoc_insertion_point(field_set_char:remill.cfg.Instr.bytes)
}
inline void Instr::set_bytes(const void* value, size_t size) {
  set_has_bytes();
  if (bytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:remill.cfg.Instr.bytes)
}
inline ::std::string* Instr::mutable_bytes() {
  set_has_bytes();
  if (bytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytes_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:remill.cfg.Instr.bytes)
  return bytes_;
}
inline ::std::string* Instr::release_bytes() {
  clear_has_bytes();
  if (bytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bytes_;
    bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Instr::set_allocated_bytes(::std::string* bytes) {
  if (bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bytes_;
  }
  if (bytes) {
    set_has_bytes();
    bytes_ = bytes;
  } else {
    clear_has_bytes();
    bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:remill.cfg.Instr.bytes)
}

// required uint64 address = 2;
inline bool Instr::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Instr::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Instr::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Instr::clear_address() {
  address_ = GOOGLE_ULONGLONG(0);
  clear_has_address();
}
inline ::google::protobuf::uint64 Instr::address() const {
  // @@protoc_insertion_point(field_get:remill.cfg.Instr.address)
  return address_;
}
inline void Instr::set_address(::google::protobuf::uint64 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:remill.cfg.Instr.address)
}

// -------------------------------------------------------------------

// Block

// required uint64 address = 1;
inline bool Block::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Block::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Block::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Block::clear_address() {
  address_ = GOOGLE_ULONGLONG(0);
  clear_has_address();
}
inline ::google::protobuf::uint64 Block::address() const {
  // @@protoc_insertion_point(field_get:remill.cfg.Block.address)
  return address_;
}
inline void Block::set_address(::google::protobuf::uint64 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:remill.cfg.Block.address)
}

// required bool is_addressable = 2;
inline bool Block::has_is_addressable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Block::set_has_is_addressable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Block::clear_has_is_addressable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Block::clear_is_addressable() {
  is_addressable_ = false;
  clear_has_is_addressable();
}
inline bool Block::is_addressable() const {
  // @@protoc_insertion_point(field_get:remill.cfg.Block.is_addressable)
  return is_addressable_;
}
inline void Block::set_is_addressable(bool value) {
  set_has_is_addressable();
  is_addressable_ = value;
  // @@protoc_insertion_point(field_set:remill.cfg.Block.is_addressable)
}

// repeated .remill.cfg.Instr instructions = 3;
inline int Block::instructions_size() const {
  return instructions_.size();
}
inline void Block::clear_instructions() {
  instructions_.Clear();
}
inline const ::remill::cfg::Instr& Block::instructions(int index) const {
  // @@protoc_insertion_point(field_get:remill.cfg.Block.instructions)
  return instructions_.Get(index);
}
inline ::remill::cfg::Instr* Block::mutable_instructions(int index) {
  // @@protoc_insertion_point(field_mutable:remill.cfg.Block.instructions)
  return instructions_.Mutable(index);
}
inline ::remill::cfg::Instr* Block::add_instructions() {
  // @@protoc_insertion_point(field_add:remill.cfg.Block.instructions)
  return instructions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::remill::cfg::Instr >&
Block::instructions() const {
  // @@protoc_insertion_point(field_list:remill.cfg.Block.instructions)
  return instructions_;
}
inline ::google::protobuf::RepeatedPtrField< ::remill::cfg::Instr >*
Block::mutable_instructions() {
  // @@protoc_insertion_point(field_mutable_list:remill.cfg.Block.instructions)
  return &instructions_;
}

// -------------------------------------------------------------------

// NamedBlock

// required string name = 1;
inline bool NamedBlock::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NamedBlock::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NamedBlock::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NamedBlock::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& NamedBlock::name() const {
  // @@protoc_insertion_point(field_get:remill.cfg.NamedBlock.name)
  return *name_;
}
inline void NamedBlock::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:remill.cfg.NamedBlock.name)
}
inline void NamedBlock::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:remill.cfg.NamedBlock.name)
}
inline void NamedBlock::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:remill.cfg.NamedBlock.name)
}
inline ::std::string* NamedBlock::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:remill.cfg.NamedBlock.name)
  return name_;
}
inline ::std::string* NamedBlock::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NamedBlock::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:remill.cfg.NamedBlock.name)
}

// required uint64 address = 2;
inline bool NamedBlock::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NamedBlock::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NamedBlock::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NamedBlock::clear_address() {
  address_ = GOOGLE_ULONGLONG(0);
  clear_has_address();
}
inline ::google::protobuf::uint64 NamedBlock::address() const {
  // @@protoc_insertion_point(field_get:remill.cfg.NamedBlock.address)
  return address_;
}
inline void NamedBlock::set_address(::google::protobuf::uint64 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:remill.cfg.NamedBlock.address)
}

// required .remill.cfg.Visibility visibility = 3;
inline bool NamedBlock::has_visibility() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NamedBlock::set_has_visibility() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NamedBlock::clear_has_visibility() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NamedBlock::clear_visibility() {
  visibility_ = 0;
  clear_has_visibility();
}
inline ::remill::cfg::Visibility NamedBlock::visibility() const {
  // @@protoc_insertion_point(field_get:remill.cfg.NamedBlock.visibility)
  return static_cast< ::remill::cfg::Visibility >(visibility_);
}
inline void NamedBlock::set_visibility(::remill::cfg::Visibility value) {
  assert(::remill::cfg::Visibility_IsValid(value));
  set_has_visibility();
  visibility_ = value;
  // @@protoc_insertion_point(field_set:remill.cfg.NamedBlock.visibility)
}

// -------------------------------------------------------------------

// Module

// repeated .remill.cfg.Block blocks = 1;
inline int Module::blocks_size() const {
  return blocks_.size();
}
inline void Module::clear_blocks() {
  blocks_.Clear();
}
inline const ::remill::cfg::Block& Module::blocks(int index) const {
  // @@protoc_insertion_point(field_get:remill.cfg.Module.blocks)
  return blocks_.Get(index);
}
inline ::remill::cfg::Block* Module::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:remill.cfg.Module.blocks)
  return blocks_.Mutable(index);
}
inline ::remill::cfg::Block* Module::add_blocks() {
  // @@protoc_insertion_point(field_add:remill.cfg.Module.blocks)
  return blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::remill::cfg::Block >&
Module::blocks() const {
  // @@protoc_insertion_point(field_list:remill.cfg.Module.blocks)
  return blocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::remill::cfg::Block >*
Module::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:remill.cfg.Module.blocks)
  return &blocks_;
}

// repeated .remill.cfg.NamedBlock named_blocks = 2;
inline int Module::named_blocks_size() const {
  return named_blocks_.size();
}
inline void Module::clear_named_blocks() {
  named_blocks_.Clear();
}
inline const ::remill::cfg::NamedBlock& Module::named_blocks(int index) const {
  // @@protoc_insertion_point(field_get:remill.cfg.Module.named_blocks)
  return named_blocks_.Get(index);
}
inline ::remill::cfg::NamedBlock* Module::mutable_named_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:remill.cfg.Module.named_blocks)
  return named_blocks_.Mutable(index);
}
inline ::remill::cfg::NamedBlock* Module::add_named_blocks() {
  // @@protoc_insertion_point(field_add:remill.cfg.Module.named_blocks)
  return named_blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::remill::cfg::NamedBlock >&
Module::named_blocks() const {
  // @@protoc_insertion_point(field_list:remill.cfg.Module.named_blocks)
  return named_blocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::remill::cfg::NamedBlock >*
Module::mutable_named_blocks() {
  // @@protoc_insertion_point(field_mutable_list:remill.cfg.Module.named_blocks)
  return &named_blocks_;
}

// repeated uint64 referenced_blocks = 3;
inline int Module::referenced_blocks_size() const {
  return referenced_blocks_.size();
}
inline void Module::clear_referenced_blocks() {
  referenced_blocks_.Clear();
}
inline ::google::protobuf::uint64 Module::referenced_blocks(int index) const {
  // @@protoc_insertion_point(field_get:remill.cfg.Module.referenced_blocks)
  return referenced_blocks_.Get(index);
}
inline void Module::set_referenced_blocks(int index, ::google::protobuf::uint64 value) {
  referenced_blocks_.Set(index, value);
  // @@protoc_insertion_point(field_set:remill.cfg.Module.referenced_blocks)
}
inline void Module::add_referenced_blocks(::google::protobuf::uint64 value) {
  referenced_blocks_.Add(value);
  // @@protoc_insertion_point(field_add:remill.cfg.Module.referenced_blocks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Module::referenced_blocks() const {
  // @@protoc_insertion_point(field_list:remill.cfg.Module.referenced_blocks)
  return referenced_blocks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Module::mutable_referenced_blocks() {
  // @@protoc_insertion_point(field_mutable_list:remill.cfg.Module.referenced_blocks)
  return &referenced_blocks_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cfg
}  // namespace remill

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::remill::cfg::Visibility> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::remill::cfg::Visibility>() {
  return ::remill::cfg::Visibility_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CFG_2eproto__INCLUDED
